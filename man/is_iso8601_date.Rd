% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{is_iso8601_date}
\alias{is_iso8601_date}
\title{Check if a string matches ISO 8601 date format}
\usage{
is_iso8601_date(x, allow_reduced_precision = TRUE)
}
\arguments{
\item{x}{A character string or vector of strings to check.}

\item{allow_reduced_precision}{Logical, whether to allow reduced precision formats
(year-month or year only). Default is TRUE.}
}
\value{
Logical value indicating whether the string is in ISO 8601 date format.
}
\description{
This function checks whether a character string complies with the ISO 8601
standard for date representation (without time components). Unlike the more
general \code{is_iso8601_format()} function or the \code{is_iso8601_datetime()} function,
this specifically validates date-only formats.
}
\details{
Valid formats include:
\itemize{
\item Extended format with separators: "2023-10-15"
\item Basic format without separators: "20231015"
\item Reduced precision (year-month): "2023-10" or "202310"
\item Reduced precision (year only): "2023"
}
}
\examples{
is_iso8601_date("2023-10-15")                  # TRUE
is_iso8601_date("20231015")                    # TRUE
is_iso8601_date("2023-10")                     # TRUE (with default allow_reduced_precision=TRUE)
is_iso8601_date("2023")                        # TRUE (with default allow_reduced_precision=TRUE)
is_iso8601_date("2023-10", FALSE)              # FALSE (with allow_reduced_precision=FALSE)
is_iso8601_date("2023/10/15")                  # FALSE (not ISO 8601 format)
is_iso8601_date("2023-10-15T14:30:00")         # FALSE (has time component)
}
