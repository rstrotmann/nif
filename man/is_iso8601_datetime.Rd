% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{is_iso8601_datetime}
\alias{is_iso8601_datetime}
\title{Check if a string matches ISO 8601 date-time format}
\usage{
is_iso8601_datetime(x, strict = FALSE)
}
\arguments{
\item{x}{A character string or vector of strings to check.}

\item{strict}{Logical, whether to strictly enforce ISO 8601 specification. Default is FALSE,
which allows some common variations like space instead of 'T' separator.}
}
\value{
Logical value indicating whether the string is in ISO 8601 date-time format.
}
\description{
This function checks whether a character string complies with the ISO 8601
standard for date-time representation (combined date and time). Unlike the more
general \code{is_iso8601_format()} function, this specifically checks for the
presence of both date and time components.
}
\details{
Valid formats include:
\itemize{
\item Extended format with separators: "2023-10-15T14:30:00"
\item Basic format without separators: "20231015T143000"
\item With timezone information: "2023-10-15T14:30:00Z" or "2023-10-15T14:30:00+02:00"
\item With fractional seconds: "2023-10-15T14:30:00.123"
\item Using space instead of T separator: "2023-10-15 14:30:00" (non-strict mode only)
}
}
\examples{
is_iso8601_datetime("2023-10-15T14:30:00")        # TRUE
is_iso8601_datetime("2023-10-15 14:30:00")        # TRUE (with default strict=FALSE)
is_iso8601_datetime("2023-10-15 14:30:00", TRUE)  # FALSE (with strict=TRUE)
is_iso8601_datetime("2023-10-15T14:30:00Z")       # TRUE
is_iso8601_datetime("2023-10-15T14:30:00+02:00")  # TRUE
is_iso8601_datetime("20231015T143000")            # TRUE
is_iso8601_datetime("2023-10-15")                 # FALSE (no time component)
is_iso8601_datetime("14:30:00")                   # FALSE (no date component)
}
